{"version":3,"sources":["reportWebVitals.js","components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","robot","SearchBox","props","onChange","searchChange","type","placeholder","App","onSearchChange","event","setState","searchField","target","value","state","console","log","fetch","response","json","users","setTimeout","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8DCOCQ,EAZH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACpB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,sBAAKG,UAAU,KAAf,UACI,6BAAKF,IACL,4BAAIC,WCGLI,EATE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACKA,EAAOC,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,eAAyBA,GAAdA,EAAMT,UCG/BU,EARG,SAACC,GACjB,OACE,qBAAKR,UAAU,MAAf,SACE,uBAAOS,SAAUD,EAAME,aAAcV,UAAU,mCAAmCW,KAAK,SAASC,YAAY,qBCkDnGC,G,yDA/Cb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAoBRM,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SApB1C,EAAKC,MAAQ,CACXhB,OAAQ,GACRa,YAAa,IAGfI,QAAQC,IAAI,eAPK,E,qDAUnB,WAAoB,IAAD,OACjBC,MAAM,8CACHjC,MAAK,SAAAkC,GACH,OAAOA,EAASC,UAElBnC,MAAK,SAAAoC,GACJC,YAAW,kBAAI,EAAKX,SAAS,CAACZ,OAAQsB,MAAS,U,oBAUrD,WAAU,IAAD,OACPL,QAAQC,IAAI,UACZ,IAAMM,EAAiBC,KAAKT,MAAMhB,OAAO0B,QAAO,SAACxB,GAC/C,GAAIA,EAAMR,KAAKiC,cAAcC,SAAS,EAAKZ,MAAMH,YAAYc,eAC3D,OAAOzB,KAEX,OAAGuB,KAAKT,MAAMhB,OAAO6B,OAEjB,sBAAKjC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcmB,KAAKf,iBAC9B,cAAC,EAAD,CAAUV,OAAQwB,OAId,oBAAI5B,UAAU,KAAd,gC,GA1CIkC,cCIlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.b2b8a77e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card =({id, name, email})=>{\r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div className=\"tc\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import Card from \"../card/card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n        {robots.map(robot => <Card key={robot.id} {...robot} />)}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","const SearchBox = (props) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input onChange={props.searchChange} className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import CardList from \"./components/card-list/card-list\";\r\n// import { robots } from \"./Data/robots\";\r\nimport SearchBox from \"./components/search-box/search-box\";\r\nimport { Component } from \"react\";\r\nimport \"./App.css\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n\r\n    console.log(\"constructor\");\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then(response =>{\r\n         return response.json();\r\n      })\r\n      .then(users => {\r\n        setTimeout(()=>this.setState({robots: users}), 3000)\r\n        \r\n      })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n\r\n  };\r\n\r\n  render() {\r\n    console.log(\"render\");\r\n    const filteredRobots = this.state.robots.filter((robot) => {\r\n      if (robot.name.toLowerCase().includes(this.state.searchField.toLowerCase()))\r\n        return robot;\r\n    });\r\n    if(this.state.robots.length){\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <CardList robots={filteredRobots} />\r\n        </div>\r\n      );\r\n    }else{\r\n      return (<h1 className=\"tc\">Loading.......</h1>)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}